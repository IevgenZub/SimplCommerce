@model SimplCommerce.Module.Catalog.ViewModels.ProductDetail

@{
    ViewBag.Title = Model.Name;
}

<div class="product-detail">
    <div class="row">
        <div class="col-md-12">

            @if (Model.HasVariation)
            {
                <form>
                    <div class="product-attrs row">
                        @{
                            var optionsCount = Model.AvailableOptions.Count();
                            var columns = 12 / optionsCount;
                        }

                        @foreach (var option in Model.AvailableOptions)
                        {
                            <div class="col-sm-@columns">
                                <h5>@option.OptionName </h5>
                                <ul class="list-inline product-attr-options">
                                    @if (option.OptionName == "Departure Date")
                                    {
                                        var valuesSorted = option.Values.OrderBy(o => Convert.ToDateTime(o, new System.Globalization.CultureInfo("ru-RU", true)));

                                        @foreach (var value in valuesSorted)
                                        {
                                            var shouldChecked = Model.Variations.First().Options.Any(x => x.Value == value);
                                            var departureDate = Convert.ToDateTime(value, new System.Globalization.CultureInfo("ru-RU", true));

                                            <li>
                                                <input type="radio" value="@value" data-departure="@departureDate.ToShortDateString()" checked="@shouldChecked" name="@option.OptionName" />
                                                <label style="font-size:unset; height:28px">@departureDate.ToShortDateString()</label>
                                            </li>
                                        }
                                    }
                                    @if (option.OptionName == "Package Days")
                                    {
                                        var valuesSorted = option.Values.OrderBy(o => Convert.ToInt32(o));

                                        @foreach (var value in valuesSorted)
                                        {
                                            var shouldChecked = Model.Variations.First().Options.Any(x => x.Value == value);

                                            <li>
                                                <input type="radio" value="@value" data-return="@value" checked="@shouldChecked" name="@option.OptionName" />
                                                <label style="font-size:unset; height:28px">@value</label>
                                            </li>
                                        }
                                    }

                                    @if (option.OptionName == "Class")
                                    {
                                        foreach (var value in option.Values)
                                        {
                                            var shouldChecked = Model.Variations.First().Options.Any(x => x.Value == value);

                                            <li>
                                                <input type="radio" value="@value" checked="@shouldChecked" name="@option.OptionName" />
                                                <label style="font-size:unset; height:28px">@value</label>
                                            </li>
                                        }
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                </form>

                            foreach (var variant in Model.Variations)
                            {
                                var hidden = variant != Model.Variations.First() ? "collapse" : "";
                                var returnDate = Model.AvailableOptions.Any(o => o.OptionName == "Package Days") ? 
                                    variant.ReturnDate.Value.DateTime.ToString("dd.MM.yy") : string.Empty;

                                <div class="product-variation panel-group row @hidden" data-variation-name="@variant.NormalizedName">
                                    <div class="col-sm-12">
                                        <div class="row ">
                                            <div class="panel panel-default">
                                                <div class="panel-heading">
                                                    <div class="row">
                                                        <div class="col-xs-10">
                                                            @if (variant.StockQuantity <= 0)
                                                            {
                                                                <span class="label label-danger ">@Localizer["Out of stock"]</span>
                                                            }
                                                            else
                                                            {
                                                                @Localizer["Available"] <span class="badge">@variant.StockQuantity</span> @variant.FlightClass <span>&nbsp;1&nbsp;x&nbsp;</span><i class="fas fa-user">&nbsp;=&nbsp;<span class="priceToConvert">@variant.CalculatedProductPrice.Price</span></i>
                                                            }

                                                            @if (!string.IsNullOrEmpty(returnDate))
                                                            {
                                                                <span>(return @returnDate)</span>
                                                            }
                                                            
                                                        </div>
                                                        <div class="col-xs-2 text-right">
                                                            <img src="~/themes/AirlineTickets/img/no-dogs.png" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="panel-body">
                                                    <div class="col-xs-4 col-lg-2">
                                                        <i class="fas fa-plane"></i> @Model.Aircraft
                                                    </div>
                                                    <div class="col-xs-4 col-lg-2">
                                                        <span class="glyphicon glyphicon-lock"></span> @Model.Baggage
                                                    </div>
                                                    <div class="col-xs-4 col-lg-2">
                                                        <b>T</b> @Model.Terminal
                                                    </div>
                                                    @if (!string.IsNullOrEmpty(Model.Via))
                                                   {
                                                        <div class="col-xs-4 col-lg-2">
                                                            Via: @Model.Via
                                                        </div>
                                                   }
                                                </div>
                                            </div>
                                        </div>
                                        @if (Model.IsRoundTrip)
                                        {
                                            <div class="row">
                                                <div class="panel panel-default">
                                                    <div class="panel-body">

                                                        <div class="col-xs-4 col-lg-2">
                                                            <i class="fas fa-plane gly-rotate-left"></i> @Model.ReturnAircraft
                                                        </div>
                                                        <div class="col-xs-4 col-lg-2">
                                                            <span class="glyphicon glyphicon-lock"></span> @Model.Baggage
                                                        </div>
                                                        <div class="col-xs-4 col-lg-2">
                                                            <b>T</b> @Model.ReturnTerminal
                                                        </div>
                                                        @if (!string.IsNullOrEmpty(Model.ReturnVia))
                                                            {
                                                            <div class="col-xs-4 col-lg-2">
                                                                Via: @Model.ReturnVia
                                                            </div>
                                                            }
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>

                                <div class="add-to-cart col-sm-12 hidden">
                                    <form class="inline">
                                        <input type="hidden" name="productId" value="@variant.Id" />
                                        <span class="priceToConvert variant-price">@variant.CalculatedProductPrice.Price</span>

                                        <div class="product-quantity">
                                            <button type="button" style="font-size:smaller" class="quantity-button quantity-button-adult" name="subtract" value="-">-</button>
                                            <input type="text" style="font-size:smaller" data-product-id="@variant.Id" class="quantity-field quantity-field-adult" readonly="readonly" name="qty" value="1">
                                            <button type="button" class="quantity-button quantity-button-adult" style="font-size:smaller" name="add" value="+">+ (18+)</button>
                                        </div>
                                        <div class="product-quantity">
                                            <button type="button" style="font-size:smaller" class="quantity-button quantity-button-child" name="subtract" value="-">-</button>
                                            <input type="text" style="font-size:smaller" data-product-id="@variant.Id" class="quantity-field quantity-field-child" readonly="readonly" name="qty" value="0">
                                            <button type="button" class="quantity-button quantity-button-child" style="font-size:smaller" name="add" value="+">+ (2-11)</button>
                                        </div>
                                        <div class="product-quantity">
                                            <button type="button" style="font-size:smaller" class="quantity-button quantity-button-baby" name="subtract" value="-">-</button>
                                            <input type="text" style="font-size:smaller" data-product-id="@variant.Id" class="quantity-field quantity-field-baby" readonly="readonly" name="qty" value="0">
                                            <button type="button" class="quantity-button quantity-button-baby" style="font-size:smaller" name="add" value="+">+ (0-2)</button>
                                        </div>
                                        <button type="button" style="font-size:smaller" disabled="@(!variant.IsAllowToOrder || variant.StockQuantity <= 0)" class="btn btn-lg btn-add-cart">@Localizer["Add to cart"]</button>
                                    </form>
                                </div>
                            }
                            <div class="product-variation-notavailable collapse">
                                <span class="label label-danger">Not available</span>
                            </div>
                            }
                            else
             {
                                <br />
                                <div class="row panel-group">
                                    <div class="col-sm-12">
                                        <div class="row">
                                            <div class="panel panel-default">
                                                <div class="panel-heading">
                                                    <div class="row">
                                                        <div class="col-xs-10">
                                                            @if (Model.StockQuantity <= 0)
                                                            {
                                                                <h4><span class="label label-danger">@Localizer["Out of stock"]</span></h4>
                                                            }
                                                            else
                                                            {
                                                                 @Localizer["Available"] <span class="badge">@Model.StockQuantity</span> @Model.FlightClass <span>&nbsp;1&nbsp;x&nbsp;</span><i class="fas fa-user">&nbsp;=&nbsp;<span class="priceToConvert">@Model.CalculatedProductPrice.Price</span></i> 
                                                            }
                                                        </div>
                                                        <div class="col-xs-2 text-right">
                                                            <img src="~/themes/AirlineTickets/img/no-dogs.png" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="panel-body">
                                                    <div class="col-xs-4 col-lg-2">
                                                        <i class="fas fa-plane"></i> @Model.Aircraft
                                                    </div>
                                                    <div class="col-xs-4 col-lg-2">
                                                        <span class="glyphicon glyphicon-lock"></span> @Model.Baggage
                                                    </div>
                                                    <div class="col-xs-4 col-lg-2">
                                                        <b>T</b> @Model.Terminal
                                                    </div>
                                                    @if (!string.IsNullOrEmpty(Model.Via))
                                                    {
                                                            <div class="col-xs-4 col-lg-2">
                                                                Via: @Model.Via
                                                            </div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                            @if (Model.IsRoundTrip)
                            {
                                        <div class="row">
                                            <div class="panel panel-default">
                                                <div class="panel-body">
                                                    <div class="col-xs-4 col-lg-2">
                                                        <i class="fas fa-plane gly-rotate-left"></i> @Model.ReturnAircraft
                                                    </div>
                                                    <div class="col-xs-4 col-lg-2">
                                                        <span class="glyphicon glyphicon-lock"></span>  @Model.Baggage
                                                    </div>
                                                    <div class="col-xs-4 col-lg-2">
                                                        <b>T</b> @Model.ReturnTerminal
                                                    </div>
                                                    @if (!string.IsNullOrEmpty(Model.ReturnVia))
                                            {
                                                    <div class="col-xs-4 col-lg-2">
                                                        Via: @Model.ReturnVia
                                                    </div>
                                            }
                                                </div>
                                            </div>
                                        </div>
                            }
                                    </div>
                                </div>
                                        <div class="add-to-cart hidden">
                                            <form class="inline">
                                                <input type="hidden" name="productId" value="@Model.Id" />
                                                <div class="product-quantity">
                                                    <button type="button" style="font-size:smaller" class="quantity-button quantity-button-adult" name="subtract" value="-">-</button>
                                                    <input type="text" style="font-size:smaller" data-product-id="@Model.Id" class="quantity-field quantity-field-adult" readonly="readonly" name="qty" value="1">
                                                    <button type="button" class="quantity-button quantity-button-adult" style="font-size:smaller" name="add" value="+">+ (18+)</button>
                                                </div>
                                                <div class="product-quantity">
                                                    <button type="button" style="font-size:smaller" class="quantity-button quantity-button-child" name="subtract" value="-">-</button>
                                                    <input type="text" style="font-size:smaller" data-product-id="@Model.Id" class="quantity-field quantity-field-child" readonly="readonly" name="qty" value="0">
                                                    <button type="button" class="quantity-button quantity-button-child" style="font-size:smaller" name="add" value="+">+ (2-11)</button>
                                                </div>
                                                <div class="product-quantity">
                                                    <button type="button" style="font-size:smaller" class="quantity-button quantity-button-baby" name="subtract" value="-">-</button>
                                                    <input type="text" style="font-size:smaller" data-product-id="@Model.Id" class="quantity-field quantity-field-baby" readonly="readonly" name="qty" value="0">
                                                    <button type="button" class="quantity-button quantity-button-baby" style="font-size:smaller" name="add" value="+">+ (0-2)</button>
                                                </div>
                                                <button type="button" style="font-size:smaller" disabled="@(!Model.IsAllowToOrder || Model.StockQuantity <= 0)" class="btn btn-lg btn-add-cart">@Localizer["Add to cart"]</button>
                                            </form>
                                        </div>
                            }
        </div>
    </div>
</div>
