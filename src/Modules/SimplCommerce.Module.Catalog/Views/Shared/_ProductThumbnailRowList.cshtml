@model SimplCommerce.Module.Catalog.ViewModels.ProductThumbnail

@{
    var datesVisible = !Model.Details.AvailableOptions.Any(o => o.OptionName == "Departure Date");
    var duration = Model.LandingDate.Value.Subtract(Model.DepartureDate.Value);
    var durationTime = duration.Hours + "h " + duration.Minutes + "m";

    TimeSpan returnDuration;
    string returnDurationTime  = string.Empty;
    if (Model.IsRoundTrip)
    {
        returnDuration = Model.ReturnLandingDate.Value.Subtract(Model.ReturnDepartureDate.Value);
        returnDurationTime = duration.Hours + "h " + duration.Minutes + "m";
    }
}

<div class="my-thumbnail flight-item">
    <div class="row my-row flight-row">
        <div class="col-sm-1 airlines">
            <figure>
                <img src="@Model.ThumbnailUrl" >
                <figcaption>@Model.Carrier</figcaption>
            </figure>
        </div>
        <div class="col-sm-1">
            <span>@Model.FlightNumber</span>
        </div>
        <div class="col-sm-1">
            <span>@Model.DepartureDate.Value.Date.ToShortDateString()</span>
        </div>
        <div class="col-sm-3">
            <span>@Model.DepartureDate.Value.DateTime.ToShortTimeString() @Model.Departure</span>
        </div>
        <div class="col-sm-3">
            <span>@Model.LandingDate.Value.DateTime.ToShortTimeString() @Model.Landing </span>
        </div>
        <div class="col-sm-1">
            <span class="text-nowrap"><span class="glyphicon glyphicon-plane gly-rotate-right"></span>  @durationTime</span>
        </div>
        <div class="col-sm-2">
            <div class="row">
                <!-- panel-footer -->
                <div class="col-xs-6">
                    <div class="previous">
                        @if (!Model.IsRoundTrip)
            {
                            <button class="btn btn-secondary moreDetails">
                                <span class="fa fa-angle-double-down"></span>
                                <span class="fa fa-angle-double-up" style="display: none;"></span>
                            </button>
                        }
                    </div>
                </div>
                <div class="col-xs-6 text-right">
                    <div class="next">
                        @if (!Model.IsRoundTrip)
                        {
                            @if (!Model.Details.HasVariation)
                            {
                                <button type="submit" id="@Model.Id" class="btn pull-right btn-add-cart btn-lg btn-hide"><span class="priceToConvert">@Model.Price</span> >></button>
                                <input type="hidden" name="productId" id="productId" value="@Model.Id">
                            }
                            else
                            {
                                <b class="priceToConvert pull-right">@Model.Details.Variations.Min(v => v.CalculatedProductPrice.Price)</b>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
</div>
    @if (Model.IsRoundTrip)
    {
        <div class="row my-row flight-row">
            <div class="col-sm-1 airlines">
                    <figure>
                        <img src="@Model.ThumbnailUrl">
                        <figcaption>@Model.ReturnCarrier</figcaption>
                    </figure>
            </div>
            <div class="col-sm-1">
                <span>@Model.ReturnFlightNumber</span>
            </div> 
            <div class="col-sm-1">
                 <span >@Model.ReturnLandingDate.Value.DateTime.ToShortDateString()</span>
            </div>     
            <div class="col-sm-3">
                <span>@Model.ReturnDepartureDate.Value.DateTime.ToShortTimeString() @Model.Landing</span>
            </div>
            <div class="col-sm-3">
                <span>@Model.ReturnLandingDate.Value.DateTime.ToShortTimeString() @Model.Departure</span>
            </div>
            <div class="col-sm-1">
                <span class="text-nowrap"><span class="glyphicon glyphicon-plane gly-rotate-left"></span> @returnDurationTime</span>
            </div>
            <div class="col-sm-2">
                <div class="row">
                    <!-- panel-footer -->
                    <div class="col-xs-6">
                        <div class="previous">
                                <button class="btn btn-secondary moreDetails">
                                    <span class="fa fa-angle-double-down"></span>
                                    <span class="fa fa-angle-double-up" style="display: none;"></span>
                                </button>
                        </div>
                    </div>
                    <div class="col-xs-6 text-right">
                        <div class="next">
                                @if (!Model.Details.HasVariation)
                                {
                                    <button type="submit" id="@Model.Id" class="btn pull-right btn-add-cart btn-lg btn-hide"><span class="priceToConvert">@Model.Price</span> >></button>
                                    <input type="hidden" name="productId" id="productId" value="@Model.Id">
                                }
                                else
                                {
                                    <b class="priceToConvert pull-right">@Model.Details.Variations.Min(v => v.CalculatedProductPrice.Price)</b>
                                }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="row product-details" style="display: none; transition: max-height 0.3s">
        <div class="col-md-12 col-sm-12" >
            @await Html.PartialAsync("~/Modules/SimplCommerce.Module.Catalog/Views/Product/ProductDetail.cshtml", Model.Details)
        </div>
    </div>
</div>