@model SimplCommerce.Module.Catalog.ViewModels.ProductThumbnail

@{

    var datesVisible = !Model.Details.AvailableOptions.Any(o => o.OptionName == "Departure Date");
}

<div class="my-thumbnail flight-item">
    <div class="row my-row flight-row">
        <div class="airlines col-xs-12 col-sm-6 col-md-1 col-lg-1 hidden-sm hidden-xs">
            <figure>
                <img src="@Model.ThumbnailUrl" >
                <figcaption>@Model.Carrier</figcaption>
            </figure>
        </div>
        <div class="flight-date col-xs-6 col-sm-6 col-md-2 col-lg-1">
                <label class="visible-sm visible-xs hidden-label">Departure:&nbsp;</label>
                <span class="flight-date__text">@Model.DepartureDate.Value.Date.ToShortDateString()</span>
        </div>
        <!-- airlines flight-way icon /// hidden-md -->
        <div class="flight-way col-xs-6 col-sm-6 col-md-1 col-lg-1 hidden-sm hidden-md hidden-lg">
            @if (Model.IsRoundTrip)
            {
                <img src="~/themes/AirlineTickets/img/round-trip.png" />
            }
            else
            {
                <img src="~/themes/AirlineTickets/img/one-way1.jpg" />
            }
        </div>
        <div class="flight-number flight-number-2 col-xs-12 col-sm-6 col-md-1 col-lg-1">
            <label class="visible-sm visible-xs hidden-label">Flight #:&nbsp;</label>@Model.FlightNumber
        </div>
        <div class="from flight-departure col-xs-12 col-sm-6 col-md-3 col-lg-2">
            <label class="visible-sm visible-xs hidden-label">From:&nbsp;</label>
            <span class="flight-departure__text"><span class="flight-departure__time">@Model.DepartureDate.Value.DateTime.ToShortTimeString() </span> @Model.Departure</span>
        </div>
        <div class="to flight-landing col-xs-12 col-xs-12 col-sm-6 col-md-3 col-lg-2">
            <label class="visible-sm visible-xs hidden-label">To:&nbsp;</label>
            <span class="flight-departure__text"><span class="flight-departure__time">@Model.LandingDate.Value.DateTime.ToShortTimeString()</span>  @Model.Landing </span>
        </div>
        <div class="to flight-duration col-xs-12 col-sm-6 col-md-1 col-lg-1">
            @{
                var duration = Model.LandingDate.Value.Subtract(Model.DepartureDate.Value);
                var durationTime = duration.Hours + "h " + duration.Minutes + "m";
             }
             <label class="visible-sm visible-xs hidden-label">Duration:&nbsp;</label>

            <span class="text-nowrap">@durationTime</span>
        </div>
        <div class="flight-way-2 col-xs-12 col-sm-6 col-md-1 col-lg-1 hidden-xs">
            @if (Model.IsRoundTrip)
            {
                <img src="~/themes/AirlineTickets/img/round-trip.png" />
            }
            else
            {
                <img src="~/themes/AirlineTickets/img/one-way1.jpg" />
            }
        </div>
        <div class="col-xs-6 col-sm-6 col-md-1 col-lg-1 flight-detail">
          @if (!Model.IsRoundTrip)
            {
                <!-- <br class="visible-sm visible-xs" /> -->
                <button class="btn btn-secondary moreDetails">
                    <span class="fa fa-angle-double-down"></span>
                    <span class="fa fa-angle-double-up" style="display: none;"></span>
                    <span style="cursor: pointer;">@Localizer["Details"]</span>
                </button>
            }
        </div>

        <div class="col-xs-6 col-sm-6 col-md-2 col-lg-2 flight-price">
        @if (!Model.IsRoundTrip)
            {
                @if (!Model.Details.HasVariation)
                {
                    <button type="submit" id="@Model.Id" class="btn pull-right btn-add-cart btn-lg btn-hide"><span class="priceToConvert">@Model.Price</span> >></button>
                    <input type="hidden" name="productId" id="productId" value="@Model.Id">
                }
                else
                {
                    <p class="pull-right">
                        <span>From</span>
                        <b class="priceToConvert product-price">@Model.Details.Variations.Min(v => v.CalculatedProductPrice.Price)</b>
                    </p>
                }
            }
        </div>
</div>
    @if (Model.IsRoundTrip)
    {
        <div class="row my-row flight-row">
            <div class="airlines col-xs-12 col-sm-6 col-md-1 col-lg-1 hidden-sm hidden-xs">
                    <figure>
                        <img src="@Model.ThumbnailUrl">
                        <figcaption>@Model.ReturnCarrier</figcaption>
                    </figure>
            </div>
            <div class="flight-number flight-date col-xs-6 col-sm-6 col-md-2 col-lg-1">
                 <label class="visible-sm visible-xs hidden-label">Return:&nbsp;</label>
                 <span class="flight-date__text">
                 @Model.ReturnLandingDate.Value.DateTime.ToShortDateString()</span>
            </div>
            <!-- airlines flight-way icon /// hidden-md -->
            <div class="flight-way col-xs-6 col-sm-6 col-md-1 col-lg-1 hidden-sm hidden-md hidden-lg">
                @if (Model.IsRoundTrip)
                {
                    <img src="~/themes/AirlineTickets/img/round-trip.png" />
                }
                else
                {
                    <img src="~/themes/AirlineTickets/img/one-way1.jpg" />
                }
            </div>
            
            <div class="flight-number flight-number-2 col-xs-12 col-sm-6 col-md-1 col-lg-1">
                 <label class="visible-sm visible-xs hidden-label">Flight #:&nbsp;</label>@Model.ReturnFlightNumber
            </div>
            <div class="from flight-departure col-xs-12 col-sm-6 col-md-3 col-lg-2">
                <label class="visible-sm visible-xs hidden-label">From:&nbsp;</label>
                <span class="flight-departure__text"><span class="flight-departure__time">@Model.ReturnDepartureDate.Value.DateTime.ToShortTimeString()</span> @Model.Landing </span>
            </div>
            <div class="to flight-landing col-xs-12 col-xs-12 col-sm-6 col-md-3 col-lg-2">
                <label class="visible-sm visible-xs hidden-label">To:&nbsp;</label>
                <span class="flight-departure__text"><span class="flight-departure__time">@Model.ReturnLandingDate.Value.DateTime.ToShortTimeString()</span> @Model.Departure</span>
            </div>
            <div class="to flight-duration col-xs-12 col-sm-6 col-md-1 col-lg-1">
                @{
                    var returnDuration = Model.ReturnLandingDate.Value.Subtract(Model.ReturnDepartureDate.Value);
                    var returnDurationTime = duration.Hours + "h " + duration.Minutes + "m";
                }
                <label class="visible-sm visible-xs hidden-label">Duration:&nbsp;</label>
                <span class="text-nowrap">@returnDurationTime</span>
            </div>
            <div class="flight-way-2 col-xs-12 col-sm-6 col-md-1 col-lg-1 hidden-xs">
                @if (Model.IsRoundTrip)
                {
                    <img src="~/themes/AirlineTickets/img/round-trip.png" />
                }
                else
                {
                    <img src="~/themes/AirlineTickets/img/one-way1.jpg" />
                }
            </div>
            <div class="col-xs-6 col-sm-6 col-md-1 col-lg-1 flight-detail">
                <!-- <br class="visible-sm visible-xs" /> -->
                <button class="btn btn-secondary moreDetails">
                    <span class="fa fa-angle-double-down"></span>
                    <span class="fa fa-angle-double-up" style="display: none;"></span>
                    <span style="cursor: pointer;">@Localizer["Details"]</span>
                </button>
            </div>
            <div class="col-xs-6 col-sm-6 col-md-2 col-lg-2 flight-price">

                            @if (!Model.Details.HasVariation)
                            {
                                <button type="submit" style="width:90px" id="@Model.Id" class="btn pull-right btn-add-cart btn-lg btn-hide"><span class="priceToConvert">@Model.Price</span> >></button>
                                <input type="hidden" name="productId" id="productId" value="@Model.Id">
                            }
                            else
                            {

                                <p class="pull-right">
                                    <span>From </span>
                                    <b class="priceToConvert product-price">@Model.Details.Variations.Min(v => v.CalculatedProductPrice.Price)</b>
                                </p>
                            }

            </div>

        </div>
    }

    <div class="row product-details" style="display: none; transition: max-height 0.3s">
        <div class="col-md-12 col-sm-12" >
            @await Html.PartialAsync("~/Modules/SimplCommerce.Module.Catalog/Views/Product/ProductDetail.cshtml", Model.Details)
        </div>
    </div>
</div>